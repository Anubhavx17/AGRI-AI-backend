"""
result table

Revision ID: ed3e71e8690f
Revises: 324a2774fc58
Create Date: 2024-09-24 15:14:37.573455

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ed3e71e8690f'
down_revision = '324a2774fc58'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the foreign key constraint from crop_stress_graph_model referencing process_details
    with op.batch_alter_table('crop_stress_graph_model', schema=None) as batch_op:
        batch_op.drop_constraint('crop_stress_graph_model_process_id_fkey', type_='foreignkey')
        batch_op.drop_column('process_id')

    # Create the result_table
    op.create_table('result_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=False),
    sa.Column('tiff', sa.String(), nullable=False),
    sa.Column('excel', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['result_id'], ['crop_stress_graph_model.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Drop the process_details table
    op.drop_table('process_details')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Recreate the process_details table
    op.create_table('process_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('process_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('selected_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('selected_parameter', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('tiff_file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('excel_file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unique_farm_ids', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='process_details_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='process_details_pkey')
    )

    # Recreate the foreign key and process_id column in crop_stress_graph_model
    with op.batch_alter_table('crop_stress_graph_model', schema=None) as batch_op:
        batch_op.add_column(sa.Column('process_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('crop_stress_graph_model_process_id_fkey', 'process_details', ['process_id'], ['id'])

    # Drop the result_table
    op.drop_table('result_table')

    # ### end Alembic commands ###
